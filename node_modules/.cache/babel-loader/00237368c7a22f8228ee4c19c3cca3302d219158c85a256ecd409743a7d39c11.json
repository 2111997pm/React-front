{"ast":null,"code":"var _jsxFileName = \"/Users/prahalad/Desktop/zipfolder/fronted zip/src/components/AvailabilityForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AvailabilityForm({\n  saved,\n  setSaved,\n  setLink\n}) {\n  _s();\n  const [date, setDate] = useState('');\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n  const saveAvailability = async () => {\n    if (!date || !start || !end) {\n      alert('Please fill all fields');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.post('http://localhost:4000/api/availability', {\n        date,\n        start,\n        end\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSaved([...saved, res.data]);\n      setLink(res.data.linkId);\n      setDate('');\n      setStart('');\n      setEnd('');\n    } catch (err) {\n      alert('Failed to save availability');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"availability-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: e => setDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      value: start,\n      onChange: e => setStart(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      value: end,\n      onChange: e => setEnd(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveAvailability,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(AvailabilityForm, \"uGxDiV3L+14+PDBjlpBlX8c/0FM=\");\n_c = AvailabilityForm;\nvar _c;\n$RefreshReg$(_c, \"AvailabilityForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AvailabilityForm","saved","setSaved","setLink","_s","date","setDate","start","setStart","end","setEnd","saveAvailability","alert","token","localStorage","getItem","res","post","headers","Authorization","data","linkId","err","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/prahalad/Desktop/zipfolder/fronted zip/src/components/AvailabilityForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function AvailabilityForm({ saved, setSaved, setLink }) {\n  const [date, setDate] = useState('');\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n\n  const saveAvailability = async () => {\n    if (!date || !start || !end) {\n      alert('Please fill all fields');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.post('http://localhost:4000/api/availability', {\n        date, start, end\n      }, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      setSaved([...saved, res.data]);\n      setLink(res.data.linkId);\n      setDate(''); setStart(''); setEnd('');\n    } catch (err) {\n      alert('Failed to save availability');\n    }\n  };\n\n  return (\n    <div className='availability-form'>\n      <input type='date' value={date} onChange={e => setDate(e.target.value)} />\n      <input type='time' value={start} onChange={e => setStart(e.target.value)} />\n      <input type='time' value={end} onChange={e => setEnd(e.target.value)} />\n      <button onClick={saveAvailability}>Save</button>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,gBAAgBA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACrE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMe,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACN,IAAI,IAAI,CAACE,KAAK,IAAI,CAACE,GAAG,EAAE;MAC3BG,KAAK,CAAC,wBAAwB,CAAC;MAC/B;IACF;IACA,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,wCAAwC,EAAE;QACrEZ,IAAI;QAAEE,KAAK;QAAEE;MACf,CAAC,EAAE;QACDS,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAC9C,CAAC,CAAC;MACFX,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEe,GAAG,CAACI,IAAI,CAAC,CAAC;MAC9BjB,OAAO,CAACa,GAAG,CAACI,IAAI,CAACC,MAAM,CAAC;MACxBf,OAAO,CAAC,EAAE,CAAC;MAAEE,QAAQ,CAAC,EAAE,CAAC;MAAEE,MAAM,CAAC,EAAE,CAAC;IACvC,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZV,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC;EAED,oBACEb,OAAA;IAAKwB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAErB,IAAK;MAACsB,QAAQ,EAAEC,CAAC,IAAItB,OAAO,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1ElC,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEnB,KAAM;MAACoB,QAAQ,EAAEC,CAAC,IAAIpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5ElC,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEjB,GAAI;MAACkB,QAAQ,EAAEC,CAAC,IAAIlB,MAAM,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxElC,OAAA;MAAQmC,OAAO,EAAEvB,gBAAiB;MAAAa,QAAA,EAAC;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV;AAAC7B,EAAA,CAjCuBJ,gBAAgB;AAAAmC,EAAA,GAAhBnC,gBAAgB;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}