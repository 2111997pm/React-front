{"ast":null,"code":"var _jsxFileName = \"/Users/prahalad/Desktop/zipfolder/fronted zip/src/components/BookingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BookingPage() {\n  _s();\n  const {\n    linkId\n  } = useParams();\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [times, setTimes] = useState([]);\n  const [booked, setBooked] = useState([]);\n  useEffect(() => {\n    axios.get(`http://localhost:4000/api/availability/${linkId}`).then(res => setDates(res.data)).catch(() => alert('Invalid booking link'));\n  }, [linkId]);\n  useEffect(() => {\n    if (!selectedDate) return;\n    const avail = dates.find(d => d.date === selectedDate);\n    if (avail) {\n      const [startHour] = avail.start.split(\":\");\n      const [endHour] = avail.end.split(\":\");\n      const slots = [];\n      for (let i = parseInt(startHour); i < parseInt(endHour); i++) {\n        slots.push(`${i.toString().padStart(2, '0')}:00`);\n      }\n      axios.get(`http://localhost:4000/api/bookings/${linkId}/${selectedDate}`).then(res => {\n        setBooked(res.data);\n        setTimes(slots.filter(t => !res.data.includes(t)));\n      });\n    }\n  }, [selectedDate, dates, linkId]);\n  const bookSlot = async time => {\n    try {\n      await axios.post(`http://localhost:4000/api/book`, {\n        linkId,\n        date: selectedDate,\n        time\n      });\n      alert('Booked successfully!');\n      setSelectedDate('');\n    } catch (err) {\n      alert('Booking failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Book a Slot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedDate(e.target.value),\n      value: selectedDate,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), dates.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: d.date,\n        children: d.date\n      }, d.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slots\",\n      children: times.map(t => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"slot\",\n        onClick: () => bookSlot(t),\n        children: t\n      }, t, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(BookingPage, \"bmueyCLxhxQksi2l3j2BuBAPVSA=\", false, function () {\n  return [useParams];\n});\n_c = BookingPage;\nvar _c;\n$RefreshReg$(_c, \"BookingPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","BookingPage","_s","linkId","dates","setDates","selectedDate","setSelectedDate","times","setTimes","booked","setBooked","get","then","res","data","catch","alert","avail","find","d","date","startHour","start","split","endHour","end","slots","i","parseInt","push","toString","padStart","filter","t","includes","bookSlot","time","post","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","map","id","onClick","_c","$RefreshReg$"],"sources":["/Users/prahalad/Desktop/zipfolder/fronted zip/src/components/BookingPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function BookingPage() {\n    const { linkId } = useParams();\n    const [dates, setDates] = useState([]);\n    const [selectedDate, setSelectedDate] = useState('');\n    const [times, setTimes] = useState([]);\n    const [booked, setBooked] = useState([]);\n\n    useEffect(() => {\n        axios.get(`http://localhost:4000/api/availability/${linkId}`)\n            .then(res => setDates(res.data))\n            .catch(() => alert('Invalid booking link'));\n    }, [linkId]);\n\n    useEffect(() => {\n        if (!selectedDate) return;\n        const avail = dates.find(d => d.date === selectedDate);\n        if (avail) {\n            const [startHour] = avail.start.split(\":\");\n            const [endHour] = avail.end.split(\":\");\n            const slots = [];\n            for (let i = parseInt(startHour); i < parseInt(endHour); i++) {\n                slots.push(`${i.toString().padStart(2, '0')}:00`);\n            }\n            axios.get(`http://localhost:4000/api/bookings/${linkId}/${selectedDate}`).then(res => {\n                setBooked(res.data);\n                setTimes(slots.filter(t => !res.data.includes(t)));\n            });\n        }\n    }, [selectedDate, dates, linkId]);\n\n    const bookSlot = async (time) => {\n        try {\n            await axios.post(`http://localhost:4000/api/book`, { linkId, date: selectedDate, time });\n            alert('Booked successfully!');\n            setSelectedDate('');\n        } catch (err) {\n            alert('Booking failed');\n        }\n    };\n\n    return (\n        <div className='booking-page'>\n            <h2>Book a Slot</h2>\n            <select onChange={e => setSelectedDate(e.target.value)} value={selectedDate}>\n                <option value=''>Select Date</option>\n                {dates.map(d => <option key={d.id} value={d.date}>{d.date}</option>)}\n            </select>\n            <div className='slots'>\n                {times.map(t => (\n                    <button key={t} className='slot' onClick={() => bookSlot(t)}>{t}</button>\n                ))}\n            </div>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}