{"ast":null,"code":"var _jsxFileName = \"/Users/prahalad/Desktop/zipfolder/fronted zip/src/components/Auth.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Auth() {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const toggle = () => setIsLogin(!isLogin);\n  const handleSubmit = async () => {\n    try {\n      const url = isLogin ? '/api/auth/login' : '/api/auth/signup';\n      const payload = isLogin ? {\n        email,\n        password\n      } : {\n        name,\n        email,\n        password\n      };\n      const res = await axios.post(`http://localhost:4000${url}`, payload);\n      if (isLogin) {\n        localStorage.setItem('token', res.data.token);\n        navigate('/');\n      } else {\n        alert('Registered successfully! You can login now.');\n        setIsLogin(true);\n      }\n    } catch (err) {\n      var _err$response;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || 'Authentication failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLogin ? 'Login' : 'Signup'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Password\",\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: isLogin ? 'Login' : 'Signup'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: toggle,\n      className: \"switch-auth\",\n      children: isLogin ? \"Don't have an account? Signup\" : 'Already have an account? Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Auth, \"P6HKqUsfDvRuU5aGGzad18VIDj4=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Auth","_s","isLogin","setIsLogin","name","setName","email","setEmail","password","setPassword","navigate","toggle","handleSubmit","url","payload","res","post","localStorage","setItem","data","token","alert","err","_err$response","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","type","onClick","_c","$RefreshReg$"],"sources":["/Users/prahalad/Desktop/zipfolder/fronted zip/src/components/Auth.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Auth() {\n    const [isLogin, setIsLogin] = useState(true);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n\n    const toggle = () => setIsLogin(!isLogin);\n\n    const handleSubmit = async () => {\n        try {\n            const url = isLogin ? '/api/auth/login' : '/api/auth/signup';\n            const payload = isLogin ? { email, password } : { name, email, password };\n            const res = await axios.post(`http://localhost:4000${url}`, payload);\n\n            if (isLogin) {\n                localStorage.setItem('token', res.data.token);\n                navigate('/');\n            } else {\n                alert('Registered successfully! You can login now.');\n                setIsLogin(true);\n            }\n        } catch (err) {\n            alert(err.response?.data || 'Authentication failed');\n        }\n    };\n\n    return (\n        <div className='auth-box'>\n            <h2>{isLogin ? 'Login' : 'Signup'}</h2>\n            {!isLogin && <input placeholder='Name' value={name} onChange={e => setName(e.target.value)} />}\n            <input placeholder='Email' value={email} onChange={e => setEmail(e.target.value)} />\n            <input placeholder='Password' type='password' value={password} onChange={e => setPassword(e.target.value)} />\n            <button onClick={handleSubmit}>{isLogin ? 'Login' : 'Signup'}</button>\n            <p onClick={toggle} className='switch-auth'>\n                {isLogin ? \"Don't have an account? Signup\" : 'Already have an account? Login'}\n            </p>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}